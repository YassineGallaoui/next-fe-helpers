(function(e,n){typeof exports=="object"&&typeof module<"u"?n(exports,require("react/jsx-runtime"),require("react")):typeof define=="function"&&define.amd?define(["exports","react/jsx-runtime","react"],n):(e=typeof globalThis<"u"?globalThis:e||self,n(e.NextFEHelpers={},e.React,e.React))})(this,function(e,n,s){"use strict";const f="",c=()=>{const t=s.useRef(null),[i,r]=s.useState(!0);s.useEffect(()=>{if(!t.current)return;const a=w=>{w.key.toLowerCase()==="g"&&r(u=>!u)};return document.addEventListener("keydown",a),()=>{document.removeEventListener("keydown",a)}},[]);const o=`grid-overlay ${i?"show":""}`.trim();return n.jsx("div",{ref:t,className:o,children:n.jsx("div",{className:"container",children:n.jsx("div",{className:"row"})})})},p="",l=()=>{const t=s.useRef(null);return s.useEffect(()=>{const i=t.current;i.innerHTML=`<span>${window.innerWidth} x ${window.innerHeight}</span>
                            <span>Aspect ratio: ${(window.innerWidth/window.innerHeight).toFixed(2)}</span>`;const r=()=>{console.log("resize"),i.innerHTML=`<span>${window.innerWidth} x ${window.innerHeight}</span>
                            <span>Aspect ratio: ${(window.innerWidth/window.innerHeight).toFixed(2)}</span>`},o=d=>{d.key.toLowerCase()==="s"&&i.classList.toggle("show")};return window.addEventListener("resize",r),document.addEventListener("keydown",d=>o(d)),()=>{window.removeEventListener("resize",r),document.removeEventListener("keydown",o)}},[t]),n.jsx("div",{ref:t,className:"stats"})};e.GridHelper=c,e.StatsHelper=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
